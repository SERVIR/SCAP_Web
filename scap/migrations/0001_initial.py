# Generated by Django 4.1 on 2023-12-11 03:34

import datetime
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AOI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wdpaid', models.FloatField()),
                ('wdpa_pid', models.CharField(max_length=52)),
                ('pa_def', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=254)),
                ('orig_name', models.CharField(max_length=254)),
                ('desig', models.CharField(max_length=254, null=True)),
                ('desig_eng', models.CharField(max_length=254, null=True)),
                ('desig_type', models.CharField(max_length=20, null=True)),
                ('iucn_cat', models.CharField(max_length=20)),
                ('int_crit', models.CharField(max_length=100)),
                ('marine', models.CharField(max_length=20)),
                ('rep_m_area', models.FloatField()),
                ('gis_m_area', models.FloatField()),
                ('rep_area', models.FloatField()),
                ('gis_area', models.FloatField()),
                ('no_take', models.CharField(max_length=50)),
                ('no_tk_area', models.FloatField()),
                ('status', models.CharField(max_length=100)),
                ('status_yr', models.IntegerField()),
                ('gov_type', models.CharField(max_length=254)),
                ('own_type', models.CharField(max_length=254)),
                ('mang_auth', models.CharField(max_length=254)),
                ('mang_plan', models.CharField(max_length=254)),
                ('verif', models.CharField(max_length=20)),
                ('metadataid', models.IntegerField()),
                ('sub_loc', models.CharField(max_length=100)),
                ('parent_iso', models.CharField(max_length=50)),
                ('iso3', models.CharField(max_length=50)),
                ('supp_info', models.CharField(max_length=254)),
                ('cons_obj', models.CharField(max_length=100, null=True)),
                ('layer', models.CharField(max_length=254)),
                ('path', models.CharField(max_length=254)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
            options={
                'verbose_name_plural': 'Predefined AOIs',
            },
        ),
        migrations.CreateModel(
            name='BoundaryFiles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_id', models.IntegerField()),
                ('name_es', models.CharField(max_length=17)),
                ('nomedep', models.CharField(max_length=1, null=True)),
                ('nomemun', models.CharField(max_length=1, null=True)),
                ('pais', models.CharField(max_length=17)),
                ('fid', models.CharField(max_length=20)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
            options={
                'verbose_name_plural': 'Data Sources',
            },
        ),
        migrations.CreateModel(
            name='NewCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collection_name', models.CharField(default='', help_text='Collection name', max_length=100)),
                ('collection_description',
                 models.CharField(default='', help_text='Collection Description', max_length=100)),
                ('boundary_file', models.CharField(default='', help_text='Boundary File', max_length=100)),
                ('tiff_file', models.CharField(default='', help_text='Tiff file name', max_length=100, unique=True)),
                ('access_level', models.CharField(default='Public', help_text='Access Level', max_length=10)),
                ('projection', models.CharField(default='', help_text='Projection', max_length=100)),
                ('resolution', models.FloatField(default='', help_text='Resolution', max_length=100)),
                ('username', models.CharField(default='', help_text='Username', max_length=100)),
                ('path_to_tif_file', models.CharField(default='', help_text='Path to TIF location', max_length=150)),
                ('path_to_boundary_file',
                 models.CharField(default='', help_text='Path to Boundary file location', max_length=150)),
                ('last_accessed_on', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='PredefinedAOI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aoi_name', models.CharField(default='', help_text='AOI Name', max_length=100)),
                ('aoi_country', models.CharField(help_text='AOI Country', max_length=2)),
                ('aoi_geom', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='UserProvidedAOI',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aoi_name', models.CharField(default='', help_text='AOI name', max_length=100, unique=True)),
                ('aoi_shape_file', models.CharField(default='', help_text='AOI Shape file', max_length=100)),
                ('path_to_aoi_file',
                 models.CharField(default='', help_text='Path to Shape file location', max_length=150)),
                ('username', models.CharField(default='', help_text='Username', max_length=100)),
                ('last_accessed_on', models.DateTimeField(default=datetime.datetime.now)),
            ],
        ),
        migrations.CreateModel(
            name='ForestCoverFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_name', models.CharField(default='', help_text='Forest Cover Source file name', max_length=100)),
                ('file_directory',
                 models.CharField(default='', help_text='Forest Cover Source file directory', max_length=100)),
                ('created',
                 models.DateTimeField(default=datetime.datetime.now, help_text='Date and time the file was created')),
                ('fc_source',
                 models.ForeignKey(help_text='Forest Cover Source', on_delete=django.db.models.deletion.CASCADE,
                                   to='scap.boundaryfiles')),
            ],
            options={
                'verbose_name_plural': 'Forest Cover Files',
            },
        ),
        migrations.CreateModel(
            name='ForestCoverChangeFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(help_text='Year the change was calculated for')),
                ('baseline_year',
                 models.IntegerField(blank=True, help_text='Baseline year for forest cover change calculation',
                                     null=True)),
                ('created',
                 models.DateTimeField(default=datetime.datetime.now, help_text='Date and time the file was created')),
                ('processing_time',
                 models.FloatField(blank=True, help_text='Time to generate the file (seconds)', null=True)),
                ('file_name', models.CharField(default='', help_text='Forest Cover Change file name', max_length=200)),
                ('file_directory',
                 models.CharField(default='', help_text='Forest Cover Change file directory', max_length=200)),
                ('fc_source',
                 models.ForeignKey(help_text='Forest Cover Source', on_delete=django.db.models.deletion.CASCADE,
                                   to='scap.boundaryfiles')),
            ],
            options={
                'verbose_name_plural': 'Forest Cover Change Files',
            },
        ),
        migrations.CreateModel(
            name='ForestCoverChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(help_text='Year the change was calculated for')),
                ('baseline_year',
                 models.IntegerField(blank=True, help_text='Baseline Year for forest cover change calculation',
                                     null=True)),
                ('initial_forest_area', models.FloatField(help_text='Initial forest area for baseline year')),
                ('forest_gain', models.FloatField(help_text='Forest Gain', null=True)),
                ('forest_loss', models.FloatField(help_text='Forest Loss')),
                ('processing_time', models.FloatField(blank=True,
                                                      help_text='Time to calculate forest change data for this time period, AOI and Forest Cover Change source (seconds)',
                                                      null=True)),
                ('aoi', models.ForeignKey(default=1, help_text='AOI the calculation was made for',
                                          on_delete=django.db.models.deletion.CASCADE, to='scap.aoi')),
                ('fc_source',
                 models.ForeignKey(help_text='Forest Cover Source', on_delete=django.db.models.deletion.CASCADE,
                                   to='scap.boundaryfiles')),
            ],
        ),
    ]
